<%-
local has_titles = false
local i, k
local colspan = 1

for i, k in pairs(self.children) do
	if not has_titles and k.title and #k.title > 0 then
		has_titles = true
	end
end

-%>

<!-- tblsection -->
<fieldset class="cbi-section" id="cbi-<%=self.config%>-<%=self.sectiontype%>" style="display:none">
<% if self.title and #self.title > 0 then -%>
		<h3 class="content-title <%=(#self.description > 0) and ' note-after hoverable' or ' '%>" onclick="toggleContent(this, '<%=self.config%>.<%=self.sectiontype%>.toggle')">
			<div class="toggle-arrow expanded"><img src="<%=media%>/img/icons/arrow-toggle.svg"></div>
			<span><%=self.title%>
				<% if self.description and #self.description > 0 then %>
					<div class="label-info"><%=self.description%></div>
				<% end %>
			</span>
		</h3>
<%- end %>
<div id="<%=self.config%>.<%=self.sectiontype%>.toggle" class="toggle-content">
<%- if self.sortable then -%>
<script type="text/javascript" src="<%=media%>/dragula.js"></script>
<input type="hidden" id="cbi.sts.<%=self.config%>.<%=self.sectiontype%>" name="cbi.sts.<%=self.config%>.<%=self.sectiontype%>" value="" />
<%- end -%>
<div id="<%=self.config%>.<%=self.sectiontype%>.toggle_add" class="table-wrapper">
	<table>
		<% if has_titles then %>
			<thead>
			<tr>
				<% local i, k

				for i, k in ipairs(self.children) do colspan = colspan + 1%>
					<th><%=k.title%></th>
				<% end %>
				<% if self.extedit then -%>
					<th></th>
				<%-end-%>
				<% if self.addremove then -%>
				<th></th>
				<%-end-%>
			</tr>
			</thead>
		<% end %>
		<tbody id="tbody.<%=self.config%>.<%=self.sectiontype%>">
			<%-
			local isempty, section, i, k = true, nil, nil

			for i, k in ipairs(self:cfgsections()) do
				local last_nodes = {}
				isempty = false
				section = k

				local scope = {
					valueheader = "cbi/cell_valueheader",
					valuefooter = "cbi/cell_valuefooter"
				}
			-%>
				<tr class="cbi-section-table-row" id="cbi-<%=self.config%>-<%=section%>" data-value="<%=section%>">
				<%-
					local node

					for k, node in ipairs(self.children) do
						if not node.optional then
							if node.last then
								table.insert(last_nodes, node)
							else
								node:render(section, scope or {})
							end
						end
					end
				-%>

				<% if self.extedit or self.addremove then -%>

					<td class="button-td">
						<% if self.extedit then%>
						<input class="custom-button" type="button"
								style="background-image: url(<%=media%>/img/icons/edit.svg);"
								<%- if type(self.extedit) == "string" then %>
									onclick="location.href='<%=self.extedit:format(section)%>'"
								<%- elseif type(self.extedit) == "function" then %>
									onclick="location.href='<%=self:extedit(section)%>'"
								<%- end %>
								alt="<%:Edit%>" title="<%:Edit%>">
						</input>
						<% end; if self.addremove then%>
						<input class="custom-button" type="button" value=""
								style="background-image: url(<%=media%>/img/icons/remove.svg);"
								onclick="custom_alert(this)" return true"
								name="cbi.rts.<%=self.config%>.<%=k%>" alt="<%:Delete%>"
								title="<%:Delete%>">
						</input>
						<% end %>
					</td>
				<% end -%>
				<%-
				for k, node in ipairs(last_nodes) do
					node:render(section, scope or {})
				end
				-%>
				</tr>
			<%- end -%>

			<%- if isempty then -%>
			<tr>

				<%- if self.novaluetext then -%>
					<td class="left-aligned" <%=ifattr(colspan > 1, "colspan", colspan)%>><em><%=self.novaluetext%></em></td>
				<%- else -%>
					<td class="left-aligned" <%=ifattr(colspan > 1, "colspan", colspan)%>><em><%:This section contains no values yet%></em></td>
				<%- end -%>
			</tr>
			<%- end -%>
		</tbody>
	</table>
</div>

<%- if self.addremove then -%>
	<% if self.template_addremove then include(self.template_addremove) else -%>
	<div class="table-wrapper table-addremove">
			<table>
				<%- if not self.anonymous then -%>
					<thead>
					<tr>
						<th>Name</th>
						<th></th>
					</tr>
					</thead>
				<%- end -%>
				<tbody>
				<tr>
					<%- if self.anonymous then -%>
						<td class="input-cell">
							<input type="submit" value="<%:Add%>" title="<%:Add%>" class="btn"
								   name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>.<%=section%>"/>
						</td>
					<%- else -%>
						<td class="input-cell">
							<input type="text" id="cbi.cts.<%=self.config%>.<%=self.sectiontype%>.<%=section%>"
								   name="cbi.cts.<%=self.config%>.<%=self.sectiontype%>.<%=section%>"
								   data-type="uciname" data-optional="true" />
							<% if self.invalid_cts then -%>
							<div class="inline-input warning">
								<img src="<%=media%>/img/icons/warning.svg">
								<div class="inline-input-text">
									<% if self.message_cts then %>
									<%=self.message_cts%>
									<% else %>
									<%:Invalid%>
									<% end %>
								</div>
							</div>
							<%- end %>
						</td>
						<td>
							<input type="submit" title="<%:Add%>" class="btn"
								   onclick="if(validate_input_field()) {this.form.cbi_state='add-section'; return true} else{return false}" value="<%:Add%>"/>
						</td>
					<%- end -%>
				</tr>
				</tbody>
			</table>
	</div>
		<script type="text/javascript">
			function validate_input_field() {
				var input = document.getElementById("cbi.cts.<%=self.config%>.<%=self.sectiontype%>.<%=section%>");
				if (input.value.length === 0) {
					input.className += ' cbi-input-invalid';
					return false;
				}
				else {
					return true;
				}
			}
			checkToggled(document.getElementById("<%=self.config%>.<%=self.sectiontype%>.toggle_add"),
				'<%=self.config%>.<%=self.sectiontype%>.toggle_add');
		</script>
	<%- end %>
<%- end -%>
</fieldset>
<%- if self.sortable then -%>
<script type="text/javascript">
    var nodeListForEach = function (array, callback, scope) {
        for (var i = 0; i < array.length; i++) {
            callback.call(scope, i, array[i]);
        }
    };

    var sortableTable = dragula([document.getElementById('tbody.<%=self.config%>.<%=self.sectiontype%>')]);

    sortableTable.on('dragend', function () {
        var hidden = document.getElementById('cbi.sts.<%=self.config%>.<%=self.sectiontype%>');
        var container = document.getElementById('tbody.<%=self.config%>.<%=self.sectiontype%>');
        var rows = container.children;
        var sections = [];

        nodeListForEach(rows, function (index, row) {
            var data_value = row.getAttribute("data-value");
            if (data_value)
                sections.push(data_value);

            row.dataset.rowPosition = index + 1;
        });

        if (hidden)
            hidden.value = sections.join(" ");
    });
</script>
<%- end -%>
<script>
	e  = document.getElementById("tab.mosquitto.mqtt.client");
	section  = document.getElementById("cbi-mosquitto-topic");

	if (e && section){
		if (e.className == "tab-item active")
			section.style.display = '';
		else
			section.style.display = 'none';
	}
</script>
<script type="text/javascript">
	checkToggled(document.getElementById("<%=self.config%>.<%=self.sectiontype%>.toggle"),
					'<%=self.config%>.<%=self.sectiontype%>.toggle');
</script>
<script type="text/javascript">
	var elementToDelete;

	function custom_alert(e) {
		elementToDelete = e;
		uci_status_message('warning',
			'<p><%=self.alert_message or translate("Are you sure you want to delete this topic?")%></p>' +
			'<input type="submit" class="btn" onclick="confirmDelete()" value="Yes" />' +
			'<input type="button" class="btn" onclick="location.href=\'<%=pcdata(redirect)%>\'" value="No" />'
		);
	}

	function confirmDelete(object) {
		elementToDelete.type = "submit";
		elementToDelete.click();
	}
</script>
<!-- /tblsection -->
